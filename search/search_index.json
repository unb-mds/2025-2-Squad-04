{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udc68\u200d\ud83c\udf93 Portal dos Professores","text":"<p>Este \u00e9 o espa\u00e7o central para toda a documenta\u00e7\u00e3o, guias e informa\u00e7\u00f5es relacionadas ao projeto desenvolvido pelo Squad 04 durante o semestre de 2025-2 na disciplina de M\u00e9todos de Desenvolvimento de Software.</p>"},{"location":"#breve-descricao-do-projeto","title":"\ud83d\ude80 Breve Descri\u00e7\u00e3o do Projeto","text":"<p>O Portal de Professores da UnB \u00e9 uma plataforma centralizada que visa facilitar o acesso a informa\u00e7\u00f5es detalhadas sobre o corpo docente da universidade, melhorando a conex\u00e3o e o planejamento acad\u00eamico dentro da comunidade universit\u00e1ria.</p>"},{"location":"#visao-geral","title":"\ud83d\udccc Vis\u00e3o Geral","text":"<p>O Portal de Professores da UnB centraliza e organiza as informa\u00e7\u00f5es do corpo docente da universidade, solucionando a dificuldade de encontrar dados acad\u00eamicos consolidados.</p> <p>Nossa plataforma oferece uma interface intuitiva para:</p> <ul> <li>\ud83d\udc64 Explorar Perfis Unificados: Acesse curr\u00edculos, links para Lattes, \u00e1reas de pesquisa e contato de cada professor.</li> <li>\ud83d\udcda Ver a Produ\u00e7\u00e3o Acad\u00eamica: Encontre publica\u00e7\u00f5es, artigos e projetos de pesquisa de forma organizada.</li> <li>\ud83d\udc68\u200d\ud83c\udfeb Consultar Hist\u00f3rico de Ensino: Veja as disciplinas j\u00e1 ministradas por cada docente, facilitando o planejamento acad\u00eamico dos alunos.</li> <li>\ud83d\udd0d Pesquisar com Filtros Avan\u00e7ados: Encontre professores por nome, departamento ou \u00e1rea de interesse.</li> </ul> <p>Inicialmente, o projeto focar\u00e1 nos docentes da [Nome do Departamento ou Faculdade], com planos de expans\u00e3o para toda a UnB.</p>"},{"location":"#links-importantes","title":"\ud83d\udd17 Links Importantes","text":"<p>Acesse os recursos mais importantes do nosso projeto atrav\u00e9s dos links abaixo.</p> Recurso Link \ud83c\udf10 Documenta\u00e7\u00e3o (Este Site) https://unb-mds.github.io/2025-2-Squad-04/ \ud83d\udcbb Reposit\u00f3rio do C\u00f3digo-Fonte https://github.com/unb-mds/2025-2-Squad-04 \ud83d\udc1e Tracker de Issues (Tarefas) https://github.com/unb-mds/2025-2-Squad-04/issues \ud83c\udfa8 Prot\u00f3tipo (Figma) https://www.figma.com/design/bjxbjjiQO9wNsDTUrOxa95/MDS---SQUAD-4"},{"location":"#nossa-equipe","title":"\ud83d\udc65 Nossa Equipe","text":"<p>Conhe\u00e7a os membros do Squad 04 que est\u00e3o construindo este projeto.</p> Nome Completo Papel no Squad GitHub Caio Lacerda Desenvolvedor @caiolacerdamt Ian Pedersoli Desenvolvedor @ianpedersoli Arthur Scartezini Desenvolvedor @Ascartezini Paulo S\u00e9rgio Desenvolvedor @Paulosrsr Kaio Amoury Desenvolvedor @KaioAmouryUnB Bruno Augusto Desenvolvedor @brunodantas9"},{"location":"arquitetura/","title":"Arquitetura","text":""},{"location":"desenvolvimento/","title":"Desenvolvimento","text":""},{"location":"guias-de-uso/","title":"Guias de Uso","text":""},{"location":"requisitos/","title":"P\u00e1gina de Requisitos","text":""},{"location":"SPRINT_00/Sprint00_Flutter/","title":"\ud83d\ude80 Flutter: Guia de Conceitos Fundamentais","text":""},{"location":"SPRINT_00/Sprint00_Flutter/#o-que-e-o-flutter","title":"O que \u00e9 o Flutter?","text":"<p>Flutter \u00e9 um kit de desenvolvimento de interface de usu\u00e1rio (UI toolkit) do Google, usado para criar aplica\u00e7\u00f5es para mobile, web e desktop a partir de uma \u00fanica base de c\u00f3digo. Ele utiliza a linguagem Dart e se destaca pela alta performance e pela capacidade de criar interfaces flex\u00edveis e expressivas.</p> <p>Documenta\u00e7\u00e3o oficial: https://docs.flutter.dev/ui</p>"},{"location":"SPRINT_00/Sprint00_Flutter/#conceitos-chave","title":"Conceitos-Chave","text":"<ul> <li>Compilado para Nativo: Flutter compila seu c\u00f3digo diretamente para o c\u00f3digo de m\u00e1quina da plataforma (ARM/x86). Isso garante um desempenho muito superior ao de abordagens que usam WebViews, resultando em apps mais r\u00e1pidos e fluidos.</li> <li>Hot Reload: Uma de suas funcionalidades mais poderosas. O Hot Reload permite injetar as altera\u00e7\u00f5es de c\u00f3digo em um aplicativo em execu\u00e7\u00e3o, refletindo as mudan\u00e7as na interface quase instantaneamente. Isso acelera drasticamente o ciclo de desenvolvimento e a experimenta\u00e7\u00e3o.</li> </ul>"},{"location":"SPRINT_00/Sprint00_Flutter/#widgets-os-blocos-de-construcao","title":"Widgets: Os Blocos de Constru\u00e7\u00e3o","text":"<p>Em Flutter, a regra principal \u00e9: tudo \u00e9 um widget. Eles s\u00e3o os blocos fundamentais que voc\u00ea usa para construir a interface, representando desde elementos vis\u00edveis (como <code>Text</code> e <code>Button</code>) at\u00e9 a organiza\u00e7\u00e3o do layout (<code>Column</code>, <code>Row</code>, <code>Padding</code>).</p> <p>A constru\u00e7\u00e3o de telas \u00e9 baseada em composi\u00e7\u00e3o, onde widgets s\u00e3o combinados e aninhados para criar interfaces complexas.</p>"},{"location":"SPRINT_00/Sprint00_Flutter/#statelesswidget-vs-statefulwidget","title":"StatelessWidget vs. StatefulWidget","text":"<p>O estado de um widget \u00e9 qualquer informa\u00e7\u00e3o que pode mudar durante a execu\u00e7\u00e3o e que afeta sua apar\u00eancia. Com base nisso, existem dois tipos principais de widgets:</p>"},{"location":"SPRINT_00/Sprint00_Flutter/#1-statelesswidget-widget-sem-estado","title":"1. <code>StatelessWidget</code> (Widget Sem Estado)","text":"<p>Um <code>StatelessWidget</code> \u00e9 imut\u00e1vel. Uma vez desenhado na tela, ele n\u00e3o pode alterar seu estado interno. Sua apar\u00eancia depende exclusivamente das informa\u00e7\u00f5es que recebe no momento de sua cria\u00e7\u00e3o.</p> <ul> <li>Quando usar? Para elementos est\u00e1ticos da interface, como \u00edcones, textos fixos e bot\u00f5es que n\u00e3o mudam de apar\u00eancia.</li> </ul>"},{"location":"SPRINT_00/Sprint00_Flutter/#2-statefulwidget-widget-com-estado","title":"2. <code>StatefulWidget</code> (Widget Com Estado)","text":"<p>Um <code>StatefulWidget</code> \u00e9 din\u00e2mico. Ele \u00e9 projetado para gerenciar um estado interno que pode mudar em resposta a intera\u00e7\u00f5es do usu\u00e1rio ou outras fontes de dados.</p> <ul> <li>Como funciona? Ele armazena seu estado em um objeto <code>State</code>. Para atualizar a interface, voc\u00ea deve chamar o m\u00e9todo <code>setState()</code>, que notifica o Flutter sobre a mudan\u00e7a e solicita uma reconstru\u00e7\u00e3o do widget na tela.</li> <li>Quando usar? Para qualquer componente interativo, como caixas de formul\u00e1rio (<code>TextField</code>), seletores (<code>Checkbox</code>) ou qualquer UI que precise ser redesenhada.</li> </ul>"},{"location":"SPRINT_00/Sprint00_Flutter/#exemplo-pratico-ola-mundo","title":"Exemplo Pr\u00e1tico: \"Ol\u00e1, Mundo!\"","text":"<p>A seguir, um exemplo comentado de um aplicativo \"Ol\u00e1, Mundo!\", que demonstra a estrutura b\u00e1sica e o uso de widgets essenciais.</p> <p>```dart // Importa o pacote Material, que cont\u00e9m os widgets b\u00e1sicos de UI. import 'package:flutter/material.dart';</p> <p>// A fun\u00e7\u00e3o main() \u00e9 o ponto de entrada da aplica\u00e7\u00e3o. void main() {   // runApp() inicia o aplicativo, renderizando o widget principal.   runApp(const MeuApp()); }</p> <p>// O widget raiz da nossa aplica\u00e7\u00e3o, do tipo StatelessWidget. class MeuApp extends StatelessWidget {   const MeuApp({super.key});</p> <p>// O m\u00e9todo build descreve a UI do widget.   @override   Widget build(BuildContext context) {     // MaterialApp \u00e9 um widget essencial que configura a aplica\u00e7\u00e3o.     return MaterialApp(       title: 'Meu Primeiro App Flutter',       // Scaffold fornece uma estrutura visual b\u00e1sica para a tela.       home: Scaffold(         // AppBar \u00e9 a barra de t\u00edtulo superior.         appBar: AppBar(           title: const Text('Ol\u00e1, Mundo!'),         ),         // body \u00e9 o conte\u00fado principal da tela.         body: const Center(           // Center \u00e9 um widget de layout que centraliza seu filho.           child: Text(             'Bem-vindo ao Flutter!',             style: TextStyle(fontSize: 24),           ),         ),       ),     );   } }</p>"},{"location":"SPRINT_00/Sprint00_Git_Github/","title":"O que \u00e9 Git e GitHub?","text":""},{"location":"SPRINT_00/Sprint00_Git_Github/#git","title":"Git","text":"<p>Git \u00e9 como um controle de hist\u00f3rico para o c\u00f3digo. Ele ajuda a manter um registro de todas as mudan\u00e7as feitas, permitindo que voc\u00ea volte a qualquer vers\u00e3o anterior do seu projeto quando necess\u00e1rio. Isso permite que v\u00e1rias pessoas trabalhem no mesmo projeto ao mesmo tempo, sem um atrapalhar no projeto do outro.</p>"},{"location":"SPRINT_00/Sprint00_Git_Github/#principais-conceitos","title":"Principais conceitos:","text":"<ul> <li>Commit: Registra suas altera\u00e7\u00f5es no reposit\u00f3rio.</li> <li>Branch: Cria uma \"ramifica\u00e7\u00e3o\" para trabalhar em novas ideias sem afetar o projeto principal.</li> <li>Merge: Junta as altera\u00e7\u00f5es feitas em diferentes branches.</li> </ul>"},{"location":"SPRINT_00/Sprint00_Git_Github/#github","title":"GitHub","text":"<p>GitHub \u00e9 como o \"Google Drive\" do c\u00f3digo. Ele usa o Git para armazenar seus projetos online e, al\u00e9m disso, oferece uma maneira super pr\u00e1tica de colaborar com outros desenvolvedores. \u00c9 onde voc\u00ea compartilha seu c\u00f3digo por meio dos reposit\u00f3rios, pede revis\u00f5es e at\u00e9 automatizar algumas tarefas do projeto.</p>"},{"location":"SPRINT_00/Sprint00_Git_Github/#principais-funcionalidades","title":"Principais funcionalidades:","text":"<ul> <li>Pull Requests (PR): Quando voc\u00ea termina uma tarefa e quer que outra pessoa revise e aprove antes de integrar ao c\u00f3digo principal.</li> <li>Issues: Para rastrear bugs, ideias ou tarefas a serem feitas.</li> <li>Actions: Automatiza processos, como rodar testes sempre que algu\u00e9m faz uma mudan\u00e7a no c\u00f3digo.</li> </ul> <p>Resumindo: Git \u00e9 a ferramenta que mant\u00e9m o controle das vers\u00f5es do seu c\u00f3digo, e o GitHub \u00e9 onde voc\u00ea armazena, compartilha e colabora com a equipe de forma pr\u00e1tica e organizada.</p>"},{"location":"SPRINT_00/Sprint00_Git_Github/#como-configurar-o-git-no-seu-pc","title":"Como configurar o Git no seu PC","text":""},{"location":"SPRINT_00/Sprint00_Git_Github/#1-instalar-o-git","title":"1. Instalar o Git","text":"<p>Fa\u00e7a o download da vers\u00e3o mais recente do Git e siga o processo de instala\u00e7\u00e3o.</p>"},{"location":"SPRINT_00/Sprint00_Git_Github/#2-verificar-a-instalacao","title":"2. Verificar a instala\u00e7\u00e3o","text":"<p>Ap\u00f3s instalar, abra o terminal e digite o seguinte comando:</p> <pre><code>git --version\n</code></pre> <p>Se aparecer a vers\u00e3o do Git, significa que a instala\u00e7\u00e3o foi bem-sucedida. \u2705</p>"},{"location":"SPRINT_00/Sprint00_Git_Github/#3-configurar-suas-credenciais-do-github","title":"3. Configurar suas credenciais do Github","text":"<p>Dentro do terminal da sua IDE (vscode, cursor) voc\u00ea faz a seguinte configura\u00e7\u00e3o:</p> <pre><code>git config --global user.name \"Seu Nome\"\ngit config --global user.email \"seuemail@dominio.com\"\n</code></pre> <p>Depois disso seu git t\u00e1 configurado, s\u00f3 come\u00e7ar a fazer seu projeto, iniciar o reposit\u00f3rio, enviar os commits e tudo mais (vou ensinar no pr\u00f3ximo).</p>"},{"location":"SPRINT_00/Sprint00_Git_Github/#links-uteis","title":"Links \u00dateis","text":"<ul> <li>Documenta\u00e7\u00e3o Oficial do Git (em portugu\u00eas)</li> </ul>"},{"location":"SPRINT_00/Sprint00_Git_Github/#guia-rapido-como-comitar-no-github","title":"Guia R\u00e1pido: Como \"Comitar\" no GitHub","text":""},{"location":"SPRINT_00/Sprint00_Git_Github/#passo-1-verifique-o-status-das-suas-alteracoes","title":"Passo 1: Verifique o Status das Suas Altera\u00e7\u00f5es","text":"<p>Depois de modificar seus arquivos, o primeiro passo \u00e9 verificar o que foi alterado. Use o comando:</p> <pre><code>git status\n</code></pre> <ul> <li>Arquivos em vermelho: Foram modificados, mas ainda n\u00e3o est\u00e3o preparados para o commit (n\u00e3o est\u00e3o no \"stage\").</li> <li>Arquivos em verde: J\u00e1 est\u00e3o no \"stage\" e prontos para serem commitados.</li> </ul>"},{"location":"SPRINT_00/Sprint00_Git_Github/#passo-2-adicione-os-arquivos-ao-stage","title":"Passo 2: Adicione os Arquivos ao \"Stage\"","text":"<p>Para incluir os arquivos que voc\u00ea deseja no pr\u00f3ximo commit, utilize o comando <code>git add</code>.</p> <p>Para adicionar um arquivo espec\u00edfico:</p> <pre><code>git add &lt;nome_do_arquivo&gt;\n</code></pre> <p>Para adicionar TODOS os arquivos modificados de uma vez:</p> <pre><code>git add .\n</code></pre>"},{"location":"SPRINT_00/Sprint00_Git_Github/#passo-3-faca-o-commit-das-alteracoes","title":"Passo 3: Fa\u00e7a o Commit das Altera\u00e7\u00f5es","text":"<p>Agora, registre as altera\u00e7\u00f5es adicionadas com uma mensagem.</p> <pre><code>git commit -m \"feat(login): adiciona valida\u00e7\u00e3o de senha\"\n</code></pre>"},{"location":"SPRINT_00/Sprint00_Git_Github/#boas-praticas-para-mensagens-de-commit","title":"Boas Pr\u00e1ticas para Mensagens de Commit","text":"<p>\u00c9 sempre bom seguir um padr\u00e3o para manter o hist\u00f3rico do projeto claro e organizado.</p>"},{"location":"SPRINT_00/Sprint00_Git_Github/#principais-tipos","title":"Principais tipos:","text":"<ul> <li>feat: Para novas funcionalidades.</li> <li>fix: Para corre\u00e7\u00e3o de bugs.</li> <li>docs: Para altera\u00e7\u00f5es na documenta\u00e7\u00e3o.</li> <li>style: Para formata\u00e7\u00e3o de c\u00f3digo, sem altera\u00e7\u00e3o de l\u00f3gica.</li> <li>refactor: Para melhorias internas que n\u00e3o alteram o comportamento.</li> <li>chore: Para tarefas de build, pacotes, etc.</li> </ul> <p>Exemplos de commits: Conventional Commits.</p>"},{"location":"SPRINT_00/Sprint00_Git_Github/#passo-4-envie-as-alteracoes-para-o-github","title":"Passo 4: Envie as Altera\u00e7\u00f5es para o GitHub","text":"<p>Depois, s\u00f3 enviar seus commits para o reposit\u00f3rio remoto (GitHub) com o comando <code>git push</code>.</p> <pre><code>git push origin &lt;nome-da-branch&gt;\n</code></pre> <p>Substitua <code>&lt;nome-da-branch&gt;</code> pelo nome da branch em que voc\u00ea est\u00e1 trabalhando (ex: <code>feature/nova-tela</code> ou <code>main</code>).</p>"},{"location":"SPRINT_00/Sprint00_Git_Github/#dicas-de-boas-praticas","title":"Dicas de Boas Pr\u00e1ticas","text":"<p>Evite enviar altera\u00e7\u00f5es diretamente para a branch <code>main</code> ou <code>master</code>. Crie sempre uma branch nova para cada funcionalidade ou corre\u00e7\u00e3o.</p> <p>Para criar e j\u00e1 mudar para uma nova branch, use:</p> <pre><code>git checkout -b &lt;nome-da-sua-branch&gt;\n</code></pre>"},{"location":"SPRINT_00/Sprint00_Methodology/","title":"\ud83d\udcda Estudo sobre Metodologias de Desenvolvimento de Software","text":""},{"location":"SPRINT_00/Sprint00_Methodology/#o-que-sao-as-metodologias-de-software","title":"\ud83d\udcd6 O que s\u00e3o as metodologias de software?","text":"<p>S\u00e3o um conjunto estruturado de pr\u00e1ticas, t\u00e9cnicas, regras e processos usados para organizar, planejar, executar e controlar o desenvolvimento de um sistema de software.</p>"},{"location":"SPRINT_00/Sprint00_Methodology/#por-que-elas-existem","title":"\u2753 Por que elas existem?","text":"<ul> <li>\u2705 Organizar o trabalho (quem faz o qu\u00ea e quando)  </li> <li>\u2705 Reduzir riscos (atrasos, retrabalho, falhas de comunica\u00e7\u00e3o)  </li> <li>\u2705 Aumentar a qualidade (padr\u00f5es, testes, revis\u00f5es)  </li> <li>\u2705 Melhorar a previsibilidade (entregas mais confi\u00e1veis)  </li> <li>\u2705 Facilitar a comunica\u00e7\u00e3o entre equipe e cliente  </li> </ul>"},{"location":"SPRINT_00/Sprint00_Methodology/#quando-aplicar","title":"\ud83d\udee0\ufe0f Quando aplicar","text":"<p>As metodologias devem ser aplicadas a qualquer projeto, mas o modelo escolhido depende do contexto (tamanho, risco, complexidade e din\u00e2mica):</p> <ul> <li>\ud83d\udccc Projetos pequenos, requisitos bem definidos: metodologias mais simples (ex.: Cascata)  </li> <li>\ud83d\udccc Projetos grandes ou requisitos incertos/mut\u00e1veis: metodologias \u00e1geis (Scrum, Kanban, XP)  </li> <li>\ud83d\udccc Projetos cr\u00edticos (alta seguran\u00e7a, sa\u00fade, avia\u00e7\u00e3o, financeiro): metodologias formais (RUP, h\u00edbridos, normas ISO)  </li> <li>\ud83d\udccc Ambientes que exigem entregas r\u00e1pidas e melhoria cont\u00ednua: DevOps + m\u00e9todos \u00e1geis  </li> </ul>"},{"location":"SPRINT_00/Sprint00_Methodology/#metodologias-ageis","title":"\ud83d\ude80 Metodologias \u00c1geis","text":""},{"location":"SPRINT_00/Sprint00_Methodology/#1-scrum","title":"1. Scrum","text":"<p>\ud83d\udd39 O que \u00e9: Framework \u00e1gil baseado em ciclos curtos chamados sprints (1 a 4 semanas). O foco \u00e9 entregar incrementos funcionais a cada sprint.  </p> <p>Pap\u00e9is - Product Owner (PO): define prioridades e mant\u00e9m o backlog - Scrum Master: facilita o processo e remove impedimentos - Time de Desenvolvimento: multidisciplinar, respons\u00e1vel pelas entregas  </p> <p>Artefatos - Product Backlog: lista de tudo que o produto precisa - Sprint Backlog: tarefas selecionadas para a sprint - Incremento: entrega ao final de cada sprint  </p> <p>Cerim\u00f4nias - Sprint Planning - Daily Scrum (at\u00e9 15 min) - Sprint Review - Sprint Retrospective  </p> <p>\ud83d\udccc Quando usar: times pequenos a m\u00e9dios, projetos com requisitos que mudam com frequ\u00eancia.  </p>"},{"location":"SPRINT_00/Sprint00_Methodology/#2-kanban","title":"2. Kanban","text":"<p>\ud83d\udd39 O que \u00e9: M\u00e9todo visual de gest\u00e3o de fluxo de trabalho. Usa quadros (boards) com colunas (ex.: \"A Fazer\", \"Fazendo\", \"Feito\").  </p> <p>Princ\u00edpios - Visualizar o fluxo de trabalho - Limitar o trabalho em progresso (WIP) - Melhorar continuamente  </p> <p>Caracter\u00edsticas - N\u00e3o define pap\u00e9is fixos - Entregas cont\u00ednuas (sem sprints) - Pode ser usado junto com Scrum  </p> <p>\ud83d\udccc Quando usar: manuten\u00e7\u00e3o de sistemas, equipes que precisam de flexibilidade e fluxo cont\u00ednuo.  </p>"},{"location":"SPRINT_00/Sprint00_Methodology/#3-xp-extreme-programming","title":"3. XP (Extreme Programming)","text":"<p>\ud83d\udd39 O que \u00e9: Metodologia \u00e1gil voltada para qualidade do c\u00f3digo e boas pr\u00e1ticas.  </p> <p>Pr\u00e1ticas principais - Pair Programming - Test-Driven Development (TDD) - Refatora\u00e7\u00e3o cont\u00ednua - Integra\u00e7\u00e3o cont\u00ednua - Pequenas releases frequentes - Feedback constante do cliente  </p> <p>Valores: comunica\u00e7\u00e3o, simplicidade, feedback, coragem e respeito.  </p> <p>\ud83d\udccc Quando usar: projetos de alto risco t\u00e9cnico, que exigem qualidade e mudan\u00e7as constantes.  </p>"},{"location":"SPRINT_00/Sprint00_Methodology/#frameworks-de-escala-agil","title":"\ud83c\udf0d Frameworks de Escala \u00c1gil","text":"<ul> <li>SAFe, Spotify Model e outros foram criados para grandes empresas, com muitos times.  </li> <li>Minha pesquisa mostrou que n\u00e3o s\u00e3o necess\u00e1rios no nosso contexto, j\u00e1 que o projeto \u00e9 de porte reduzido.  </li> </ul>"},{"location":"SPRINT_00/Sprint00_Methodology/#conclusao","title":"\ud83d\udcdd Conclus\u00e3o","text":"<p>Considerando: - O contexto da equipe - A experi\u00eancia inicial limitada - O tempo e escopo do projeto  </p> <p>\u27a1\ufe0f A melhor metodologia para adotar \u00e9 Scrum com apoio do Kanban.  </p> <p>Por qu\u00ea? - Scrum garante organiza\u00e7\u00e3o com sprints semanais e defini\u00e7\u00e3o de pap\u00e9is (PO, Scrum Master, Arquitetos e Devs). - Kanban adiciona um quadro visual para acompanhamento do fluxo:   - O que j\u00e1 foi feito   - O que est\u00e1 em andamento   - O que ainda falta fazer  </p> <p>\u26a1 Dessa forma teremos agilidade, organiza\u00e7\u00e3o visual e entregas frequentes dentro do prazo.  </p>"},{"location":"SPRINT_00/Sprint00_Scrum/","title":"Estudo sobre Scrum","text":""},{"location":"SPRINT_00/Sprint00_Scrum/#o-que-e-scrum","title":"\ud83d\udcd6 O que \u00e9 Scrum?","text":"<p>O Scrum \u00e9 um framework \u00e1gil utilizado para gerenciar o desenvolvimento de software de forma iterativa e incremental. Ele organiza o trabalho em ciclos curtos chamados sprints, permitindo que a equipe entregue valor continuamente e se adapte rapidamente a mudan\u00e7as. </p> <p>Scrum \u00e9 baseado em tr\u00eas pilares: transpar\u00eancia, inspe\u00e7\u00e3o e adapta\u00e7\u00e3o. Ele define pap\u00e9is (Scrum Master, Product Owner e Time de Desenvolvimento), eventos (Sprint, Daily Scrum, Sprint Planning, Sprint Review e Retrospective) e artefatos (Product Backlog, Sprint Backlog e Incremento).</p> <p>Scrum Guide Oficial Artigo explicativo da Atlassian</p>"},{"location":"SPRINT_00/Sprint00_Scrum/#objetivo","title":"\ud83c\udfaf Objetivo","text":"<ul> <li>[x] Consolidar conhecimento sobre Scrum.  </li> <li>[x] Implementar um fluxo de trabalho no GitHub usando Scrum (issues, sprints, board).  </li> <li>[x] Testar na pr\u00e1tica como a equipe se organiza em ciclos curtos (sprints).  </li> </ul>"},{"location":"SPRINT_00/Sprint00_Scrum/#requisitos","title":"\u2705 Requisitos","text":"<ul> <li>Leitura da documenta\u00e7\u00e3o oficial do Scrum Guide.  </li> <li>Cria\u00e7\u00e3o de um reposit\u00f3rio no GitHub com Projects simulando Sprints.  </li> <li>Explora\u00e7\u00e3o de ferramentas de gerenciamento (boards, issues, labels).  </li> </ul>"},{"location":"SPRINT_00/Sprint00_Scrum/#aplicacao-pratica-no-github","title":"\ud83d\udee0\ufe0f Aplica\u00e7\u00e3o Pr\u00e1tica no GitHub","text":"<ol> <li>Cria\u00e7\u00e3o do Reposit\u00f3rio </li> <li>Foi criado um reposit\u00f3rio para centralizar c\u00f3digo, documenta\u00e7\u00e3o e tarefas.  </li> <li> <p>Adicionamos um <code>README.md</code> explicando Scrum e como seria aplicado no projeto.  </p> </li> <li> <p>Configura\u00e7\u00e3o do GitHub Projects </p> </li> <li>Criamos um Project Board no estilo Kanban, com colunas: To Do, In Progress e Done.  </li> <li>Esse board representou a Sprint em andamento.  </li> </ol> <p>Exemplo de GitHub Projects</p>"},{"location":"SPRINT_00/Sprint00_Scrum/#backlog-e-sprint","title":"\ud83d\uddc2\ufe0f Backlog e Sprint","text":"<ul> <li>Criamos issues representando hist\u00f3rias de usu\u00e1rio e tarefas.  </li> <li>Cada issue recebeu labels (<code>backlog</code>, <code>sprint-1</code>, <code>bug</code>, <code>feature</code>).  </li> <li>Durante o Sprint Planning, selecionamos issues do backlog e movemos para To Do.  </li> </ul> <p>Exemplo de issue: \"Como usu\u00e1rio, quero cadastrar uma tarefa de estudo para acompanhar meu progresso.\" </p>"},{"location":"SPRINT_00/Sprint00_Scrum/#fluxo-de-trabalho","title":"\ud83d\udd04 Fluxo de Trabalho","text":"<ol> <li>Branches \u2192 Cada issue teve uma branch pr\u00f3pria (ex: <code>feature/cadastro-tarefas</code>).  </li> <li>Pull Requests \u2192 As branches geraram PRs conectados \u00e0s issues.  </li> <li>Revis\u00e3o e Merge \u2192 Ap\u00f3s aprova\u00e7\u00e3o, o PR era mesclado na branch principal e a issue movida para Done.  </li> </ol> <p>Guia de Issues e PRs no GitHub</p>"},{"location":"SPRINT_00/Sprint00_Scrum/#acompanhamento","title":"\ud83d\udcca Acompanhamento","text":"<ul> <li>Fizemos Daily Scrums ass\u00edncronas via coment\u00e1rios em issues.  </li> <li>Sprint Review: checamos o board e apresentamos o incremento conclu\u00eddo.  </li> <li>Retrospectiva: destacamos pontos fortes (organiza\u00e7\u00e3o das issues) e melhorias (criar tarefas menores para evitar bloqueios).  </li> </ul>"},{"location":"SPRINT_00/Sprint00_Scrum/#evidencias-simulacao","title":"\ud83d\udcf7 Evid\u00eancias (simula\u00e7\u00e3o)","text":"<ul> <li>Board do GitHub com colunas To Do / In Progress / Done.  </li> <li>Issue aberta com labels e descri\u00e7\u00e3o detalhada.  </li> <li>Pull Request vinculado a uma issue.  </li> </ul>"},{"location":"SPRINT_00/Sprint00_Scrum/#conclusao","title":"\u2705 Conclus\u00e3o","text":"<p>Esse estudo permitiu: - Consolidar o conhecimento te\u00f3rico sobre Scrum. - Implementar um fluxo Scrum no GitHub com boards, issues e sprints. - Testar a organiza\u00e7\u00e3o da equipe em ciclos curtos (sprints) e entregar incrementos de valor.  </p> <p>O exerc\u00edcio mostrou que o Scrum, aliado ao GitHub, facilita a comunica\u00e7\u00e3o, a organiza\u00e7\u00e3o e o acompanhamento do progresso de maneira clara e eficiente. ```</p>"},{"location":"SPRINT_00/Sprint00_Software_Architecture/","title":"Arquitetura de Software","text":""},{"location":"SPRINT_00/Sprint00_Software_Architecture/#o-que-e-arquitetura-de-software","title":"O que \u00e9 arquitetura de software?","text":"<p>Ap\u00f3s estudos sobre o tema, a arquitetura de software \u00e9 a forma como se planeja lidar com as partes importantes do projeto, definidas pelos desenvolvedores.</p> <p>Ela define o que \u00e9 o sistema em termos de componentes computacionais e, os relacionamentos entre estes componentes, os padr\u00f5es que guiam a sua composi\u00e7\u00e3o e restri\u00e7\u00f5es.</p> <p>A arquitetura \u00e9 de suma import\u00e2ncia para o software, pois sem ela voc\u00ea pode deixar o codigo desorganizado e sem saber o caminho para desenvolver seu software, fazendo com que atrase o fim do seu projeto.</p> <p>Link para o artigo</p> <p>Link para o artigo</p>"},{"location":"SPRINT_00/Sprint00_Software_Architecture/#o-processo-de-arquitetura-de-software","title":"O processo de arquitetura de software","text":"<ul> <li> <p>Elabora\u00e7\u00e3o do modelo de neg\u00f3cio - envolve analisar custo, tempode desenvolvimento, restri\u00e7\u00f5es de mercado, interfaces com outros sistemas, etc.</p> </li> <li> <p>Entendimento dos requisitos: levantamneto de requisitos e modelo de d\u00f3minio.</p> </li> <li> <p>Cria\u00e7\u00e3o ou sel\u00e7\u00e3o de uma arquitetura: identifica\u00e7\u00e3o dos componentes e sua intera\u00e7\u00f5es, das depend\u00eancias de constru\u00e7\u00e3o e tecnologias que apoiam a implemnta\u00e7\u00e3o.</p> </li> <li> <p>Representa\u00e7\u00e3o de arquitetura e divulga\u00e7\u00e3o: para permitir aos desenvolvedores e testadores o entendimento da arquitetura.</p> </li> <li> <p>Implementa\u00e7\u00e3o da arquitetura, seguindo seus protocolos e estruturas.</p> </li> <li> <p>An\u00e1lise e avalia\u00e7\u00e3o: verificar a adequa\u00e7\u00e3o da arquitetura, regustrando impactos, risco e dificuldades, o que servir\u00e1 para evolu\u00e7\u00e3o da arquitetura </p> </li> </ul> <p>Link para o artigo</p>"},{"location":"SPRINT_00/Sprint00_Software_Architecture/#importancia-da-arquitetura","title":"Import\u00e2ncia da Arquitetura","text":"<ul> <li> <p>Ela atua como uma estrutura a fim de checar o atendimento aos requisitos do sistema</p> </li> <li> <p>Suporte no controle de gastos e ger\u00eancia da complexidade do sistema</p> </li> <li> <p>Reduz o intervalo entre especifica\u00e7\u00e3o e implementa\u00e7\u00e3o </p> </li> <li> <p>Reduz riscos associados \u00e0 constru\u00e7\u00e3o do software</p> </li> <li> <p>Serve como base para criar um entendimento m\u00fatuo entre os participantes </p> </li> <li> <p>Guia para o projetp de sua implementa\u00e7\u00e3o, teste e implata\u00e7\u00e3o do sistema </p> </li> </ul>"},{"location":"SPRINT_00/Sprint00_Software_Architecture/#definicao-da-arquitetura","title":"Defini\u00e7\u00e3o da Arquitetura","text":"<p>Engenharia de requisitos como subs\u00eddio \u00e0 arquitetura</p> <p>A fase da engenharia de requisitos fornece a base necess\u00e1ria para a defini\u00e7\u00e3o da arquitetura do sistema. dessa etapa s\u00e3o obtidos:</p> <ul> <li> <p>O processo do neg\u00f3cio modelado;</p> </li> <li> <p>O planejamento estrat\u00e9gico das vers\u00f5es;</p> </li> <li> <p>Os requisitos de cada vers\u00e3o;</p> </li> </ul> <p>Essas informa\u00e7\u00f5es permintem ao arquiteto compreender o domin\u00edo da aplica\u00e7\u00e3o e alinha as decis\u00f5es arquiteturais \u00e0s necessidades do projeto.</p> <p>Import\u00e2ncia da defini\u00e7\u00e3o da arquitetura</p> <p>A defini\u00e7\u00e3o da arquitetura deve atender a crit\u00e9ros que garantem a evolu\u00e7\u00e3o e a longevidade do sistema, tais como:</p> <ul> <li> <p>Facilitar o re\u00faso em diferentes n\u00edveis;</p> </li> <li> <p>Permitir altera\u00e7\u00f5es localizadas, sem afetar outras partes do sistema;</p> </li> <li> <p>Viabilizar a adi\u00e7\u00e3o de novas funcionalidades semimpacto nas funcionalidades j\u00e1 existentes;</p> </li> <li> <p>Apoiar a evolu\u00e7\u00e3o cont\u00ednua dp sistema, prolongando sua vida \u00fatil.</p> </li> </ul> <p>Estrat\u00e9gia na defini\u00e7\u00e3o da arquitetura</p> <p>A defini\u00e7\u00e3o da arquitetura est\u00e1 baseada na sele\u00e7\u00e3o das alternativas mais adequadas ao dom\u00ednio da aplica\u00e7\u00e3o. Para isso, \u00e9 fundamental:</p> <ul> <li> <p>Reutilizar solu\u00e7\u00f5es e estrat\u00e9gias previamente validadas;</p> </li> <li> <p>Adotar frameworks, estilos arquiteturais, padr\u00f5es de projeto e linguagens de descri\u00e7\u00e3o de componentes;</p> </li> <li> <p>Basear-se em boas pr\u00e1ticas consolidadas, garantindo consist\u00eancia e qualidade no desenvolvimento.</p> </li> </ul> <p>Link para o artigo</p> <p>Conceito de padr\u00e3o</p> <ul> <li> <p>Um teplate de solu\u00e7\u00e3o para um problema recorrente que seja comprovadamente \u00fatil em um determindao contexto</p> </li> <li> <p>Um padr\u00e3o de software \u00e9 instanciado atrav\u00e9s da vincula\u00e7\u00e3o de valores e seus par\u00e2metros.</p> </li> <li> <p>Os padr\u00f5es podem existir em v\u00e1rias escalas n\u00edveis de abstra\u00e7\u00e3o; por exemplo, como padr\u00f5es de arquitetura, padr\u00f5es de an\u00e1lise, padr\u00f5es de projeto, padr\u00f5es de teste e idiomas ou padr\u00f5es de implementa\u00e7\u00e3o.</p> </li> </ul> <p>Defini\u00e7\u00e3o:\u201cum padr\u00e3o expressa uma solu\u00e7\u00e3o reutiliz\u00e1vel descrita atrav\u00e9s de tr\u00eas partes: um contexto, um problema e uma solu\u00e7\u00e3o\u201d. (GAMMA et al., 1995). </p> <ul> <li> <p>Contexto:  estende o problema a ser solucionado, apresentando situa\u00e7\u00f5es de ocorr\u00eancia desses problemas.</p> </li> <li> <p>Problema: determinado por um sistema de for\u00e7as, onde estas for\u00e7as estabelecem os aspectos do problema que devem ser considerados. </p> </li> <li> <p>Solu\u00e7\u00e3o: mostra como resolver o problema recorrente e como balancear as for\u00e7as associadas a ele.</p> </li> </ul> <p>Padr\u00f5es em ES</p> <ul> <li> <p>Eles permitem que desenvolvedores possam recorrer a solu\u00e7\u00f5es j\u00e1 existentes, para solucionar problemas que normalmente ocorrem em desenvolvimento de software.</p> </li> <li> <p>Padr\u00f5es Arquiteturais: expressam um esquema de organiza\u00e7\u00e3o estrutural fundamental para sistemas de software.(BUSCHMANN et al., 1996)</p> </li> </ul>"},{"location":"SPRINT_00/Sprint00_Software_Architecture/#estilos-de-arquitetura","title":"Estilos de arquitetura","text":"<ul> <li> <p>Uma arquitetura de software pode adotar um estilo de arquitetura, que estabelece um conjunto de padr\u00f5es e restri\u00e7\u00f5es, reduzindo as op\u00e7\u00f5es de implementa\u00e7\u00e3o e promovendo uniformidade na solu\u00e7\u00e3o. Esse estilo \u00e9 definido pela escolha de componentes e conectores que servir\u00e3o como base estrutural do sistema. Em ess\u00eancia, os estilos de arquitetura representam esquemas de organiza\u00e7\u00e3o que determinam os principais componentes, suas responsabilidades e a forma de intera\u00e7\u00e3o entre eles. Cada estilo atende a diferentes atributos de qualidade, e a escolha adequada depende da an\u00e1lise de quais atributos s\u00e3o mais relevantes para a solu\u00e7\u00e3o desejada.</p> </li> <li> <p>A arquitetura de um sistema pode aderir a um ou mais estilos arquiteturais</p> </li> <li> <p>Um estilo define os tipos de elementos que podem aparecer em uma arquitetura e as regras que regem a interconex\u00e3o entre estes elementos.</p> </li> <li> <p>Esses estilos podem simplificar o problema de defini\u00e7\u00e3o de arquiteturas de sistema.</p> </li> </ul> <p>Exemplo de estilos arquiteturais</p> <ul> <li> <p>Cliente servidor </p> </li> <li> <p>Camadas </p> </li> <li> <p>Filtros e dutos(pipes and filter)</p> </li> <li> <p>Reposit\u00f3rio </p> </li> <li> <p>Orientado a eventos (publisher/subscriber)</p> </li> <li> <p>Objetos distribu\u00eddos</p> </li> </ul>"},{"location":"SPRINT_00/Sprint00_Software_Architecture/#definicao-dos-estilos-de-arquiteturas","title":"Defini\u00e7\u00e3o dos estilos de arquiteturas","text":"<p>Layers (camadas)</p> <ul> <li>Na arquitetura Model-View-Controller (MVC), os sistemas s\u00e3o desenvolvidos nessas tr\u00eas camadas. O model estabelece regras de neg\u00f3cio e a intera\u00e7\u00e3o entre o back-end e o banco de dados (recep\u00e7\u00e3o ou envio de dados). O view define e gerencia como os dados s\u00e3o apresentados ao usu\u00e1rio (parte ligada fortemente ao  front-end). Por \u00faltimo, o controller \u00e9 respons\u00e1vel por ser o n\u00edvel intermedi\u00e1rio entre o model e o view, ao receber dados do usu\u00e1rio, e os manipula e reage de acordo com a necessidade do programador.</li> </ul> <p>SOA (Orientada a servi\u00e7o)</p> <ul> <li>Na arquitetura orientada a servi\u00e7o, divide-se o sistema em servi\u00e7os independentes, e depois, criam-se interfaces para que os servi\u00e7os interajam entre si.Em analogia, estamos preparando um prato de almo\u00e7o. Onde os servi\u00e7os s\u00e3o, por exemplo, a regi\u00e3o da prote\u00edna, a regi\u00e3o do carboidrato, e a fibrosa. A interface seria, portanto, a pr\u00f3pria lou\u00e7a que abriga essas 3 regi\u00f5es do seu prato de almo\u00e7o. </li> </ul> <p>Pipers  and  Filters (Filtos e dutos)</p> <ul> <li>Nessa, o dado recebido pelo sistema e cada componente independente do sistema (chamado filtro), opera de forma espec\u00edfica dentro do filtro. Se pensar no caso de se passar um caf\u00e9, o dado \u00e9 o p\u00f3 de caf\u00e9, e o filtro, ele interage com o p\u00f3, de forma a transformar o p\u00f3 em um caf\u00e9. Mas para que o p\u00f3 seja transformado em caf\u00e9, \u00e9 preciso que o nosso l\u00edquido seja conduzido por um duto. Podemos aplic\u00e1-lo, por exemplo, para criar um agente de IA que identifica e-mails que s\u00e3o SPAM, j\u00e1 que o agente recebe o email, o manipula at\u00e9 que o simplifiquemos a ponto criar par\u00e2metros simples para identificar spam.</li> </ul> <p>Monol\u00edtica</p> <ul> <li>Na arquitetura monol\u00edtica, criamos apenas um bloco onde os servi\u00e7os s\u00e3o interdependentes, ou seja, sua manuten\u00e7\u00e3o \u00e9 mais complexa. A intera\u00e7\u00e3o entre servi\u00e7os/m\u00e9todos \u00e9 feita de forma vertical. Pode haver modula\u00e7\u00e3o nesse tipo de sistema, para haver maior facilidade na manuten\u00e7\u00e3o do c\u00f3digo. Exemplo famoso:  Amazon Prime Video e Github.  </li> </ul> <p>Baseada em mircrosservi\u00e7os</p> <ul> <li>Considerada uma variante da arquitetura orientada a servi\u00e7os, a arquitetura baseada em microsservi\u00e7os \u00e9 um tipo muito \u00fatil para arquitetura em que se busca uma independ\u00eancia maior em termos de servi\u00e7os, e mais descentralizada do que a arquitetura monol\u00edtica.</li> </ul> <p>Hexagol</p> <ul> <li>A arquitetura hexagonal \u00e9 uma arquitetura conhecida por seu desacoplamento e f\u00e1cil manuten\u00e7\u00e3o, pois h\u00e1 grande descentraliza\u00e7\u00e3o dos servi\u00e7os. Segundo Pess\u00f4a: \u201cAs portas s\u00e3o as interfaces que permitem que a l\u00f3gica de de neg\u00f3cios se comunique com o mundo externo, e os adaptadores s\u00e3o respons\u00e1veis por implementar as portas.\u201d Um ponto muito positivo dessa arquitetura \u00e9 a  possibilidade de se incrementar outras arquiteturas devido ao grande desacoplamento. No entanto, a escritora supracitada diz que \u00e9 preciso que tenhamos um n\u00facleo bem definido para que a implementa\u00e7\u00e3o dessa estrutura seja eficaz. Camila Pess\u00f4a ainda acrescenta que: \u201cEssa arquitetura traz uma perspectiva diferente sobre a ordem das camadas de uma aplica\u00e7\u00e3o, em que normalmente temos a primeira camada como a interface e a \u00faltima como um banco de dados para armazenamento. A ideia \u00e9 entender front-end e back-end como camadas  externas ao seu dom\u00ednio!\u201d  </li> </ul>"},{"location":"SPRINT_00/Sprint00_Software_Architecture/#arquiteturas-de-referencia","title":"Arquiteturas de refer\u00eancia","text":"<ul> <li>A arquitetura de refer\u00eancia consiste em componentes de software e seus relacionamentos, implementando funcionalidades definidas no modelo de refer\u00eancia. Cada parte do modelo pode ser mapeada para um ou mais componentes, de forma que nem sempre h\u00e1 correspond\u00eancia um-para-um. Essas arquiteturas s\u00e3o espec\u00edficas de um dom\u00ednio, derivadas de estudos de aplica\u00e7\u00e3o ao inv\u00e9s de sistemas existentes, e podem servir como base para implementar sistemas ou comparar solu\u00e7\u00f5es diferentes, funcionando como padr\u00f5es de avalia\u00e7\u00e3o. Exemplos cl\u00e1ssicos incluem o modelo OSI para sistemas de comunica\u00e7\u00e3o e a organiza\u00e7\u00e3o tradicional de compiladores em vanguarda e retaguarda.</li> </ul> <p>Link para o artigo</p>"},{"location":"SPRINT_00/Sprint00_requisitos/","title":"Estudos sobre Requisitos","text":"<p>Requisitos s\u00e3o fun\u00e7\u00f5es, objetivos, prioridades e restri\u00e7\u00f5es que o sistema deve possuir para satisfazer contratos, padr\u00f5es ou especifica\u00e7\u00f5es de acordo com o(s) usu\u00e1rio(s). Eles representam aquilo que o sistema deve fazer e tamb\u00e9m como deve se comportar, servindo como base para todo o desenvolvimento do software.</p>"},{"location":"SPRINT_00/Sprint00_requisitos/#tipos-de-requisitos","title":"Tipos de Requisitos","text":""},{"location":"SPRINT_00/Sprint00_requisitos/#requisitos-funcionais","title":"Requisitos Funcionais","text":"<p>S\u00e3o aqueles que descrevem o que o sistema deve realizar: suas fun\u00e7\u00f5es, opera\u00e7\u00f5es e informa\u00e7\u00f5es processadas.</p> <p>Exemplos de requisitos funcionais: - [RF001] O sistema deve cadastrar m\u00e9dicos profissionais (entrada). - [RF002] O sistema deve emitir um relat\u00f3rio de clientes (sa\u00edda). - [RF003] O sistema deve passar um cliente da situa\u00e7\u00e3o \u201cem consulta\u201d para \u201cconsultado\u201d quando o atendimento terminar (mudan\u00e7a de estado). - [RF004] O cliente pode consultar seus dados no sistema.  </p>"},{"location":"SPRINT_00/Sprint00_requisitos/#requisitos-nao-funcionais","title":"Requisitos N\u00e3o Funcionais","text":"<p>S\u00e3o crit\u00e9rios que qualificam os requisitos funcionais, geralmente relacionados a desempenho, qualidade ou restri\u00e7\u00f5es externas. Diferente dos funcionais, eles n\u00e3o dizem o que o sistema faz, mas sim como ele deve ser.</p>"},{"location":"SPRINT_00/Sprint00_requisitos/#propriedades-e-metricas-comuns","title":"Propriedades e M\u00e9tricas Comuns","text":"Propriedade M\u00e9trica Velocidade Transa\u00e7\u00f5es por segundo, tempo de resposta, tempo de atualiza\u00e7\u00e3o de tela Tamanho KB de armazenamento, n\u00famero de chips de RAM Facilidade de uso Tempo de treinamento, quantidade de telas de ajuda Confiabilidade Tempo m\u00e9dio entre falhas, taxa de indisponibilidade, disponibilidade Robustez Tempo de rein\u00edcio ap\u00f3s falha, probabilidade de corromper dados Portabilidade N\u00famero de sistemas-alvo, percentual de c\u00f3digo dependente de plataforma"},{"location":"SPRINT_00/Sprint00_requisitos/#classificacao-dos-requisitos-nao-funcionais","title":"Classifica\u00e7\u00e3o dos Requisitos N\u00e3o Funcionais","text":"<ul> <li>Requisitos do produto final: descrevem como o produto deve se comportar.  </li> <li>Requisitos organizacionais: relacionados a pol\u00edticas ou processos internos da empresa.  </li> <li>Requisitos externos: ligados a legisla\u00e7\u00f5es ou normas que devem ser seguidas.  </li> </ul> <p>Exemplos de requisitos n\u00e3o funcionais: - [RNF001] O sistema deve imprimir o relat\u00f3rio em at\u00e9 5 segundos. - [RNF002] Todos os relat\u00f3rios devem seguir o padr\u00e3o especificado pelo setor XYZ. - [RNF003] O sistema deve ser implementado em Java.  </p>"},{"location":"SPRINT_00/Sprint00_requisitos/#consideracoes-finais","title":"Considera\u00e7\u00f5es Finais","text":"<ul> <li>Os requisitos devem ser considerados durante todo o projeto, n\u00e3o apenas no in\u00edcio.  </li> <li>Eles precisam ser claros, test\u00e1veis e validados junto aos usu\u00e1rios.  </li> <li>Requisitos mal definidos podem levar a atrasos, aumento de custos ou falhas no sistema.  </li> <li>A engenharia de requisitos envolve atividades de levantamento, an\u00e1lise, documenta\u00e7\u00e3o e valida\u00e7\u00e3o para garantir que o sistema final atenda \u00e0s necessidades reais.  </li> </ul>"},{"location":"SPRINT_00/Sprint00_requisitos/#levantamento-de-requisitos","title":"Levantamento de Requisitos","text":"<ul> <li>Compreens\u00e3o do dom\u00ednio: Os analistas devem desenvolver sua compreens\u00e3o do dom\u00ednio da aplica\u00e7\u00e3o.  </li> <li>Coleta de requisitos: Interagir com os stakeholders do sistema para descobrir seus requisitos.  </li> <li>Classifica\u00e7\u00e3o: Organizar os requisitos em grupos coerentes.  </li> <li>Resolu\u00e7\u00e3o de conflitos: Resolver diverg\u00eancias entre m\u00faltiplos stakeholders.  </li> <li>Defini\u00e7\u00e3o das prioridades: Identificar os requisitos mais importantes em conjunto com os stakeholders.  </li> <li>Verifica\u00e7\u00e3o de requisitos: Conferir se os requisitos est\u00e3o completos, consistentes e de acordo com o esperado.  </li> </ul>"},{"location":"SPRINT_00/Sprint00_requisitos/#tecnicas-de-levantamento-de-requisitos","title":"T\u00e9cnicas de Levantamento de Requisitos","text":"<ul> <li>Levantamento orientado a pontos de vista  </li> <li>Etnografia  </li> <li>Workshops  </li> <li>Prototipagem  </li> </ul>"},{"location":"SPRINT_00/Sprint00_requisitos/#exemplos-de-requisitos-de-um-sistema-ficticio","title":"Exemplos de Requisitos de um Sistema Fict\u00edcio","text":"<p>Sistema escolhido: Biblioteca Online</p>"},{"location":"SPRINT_00/Sprint00_requisitos/#requisitos-funcionais-rf","title":"Requisitos Funcionais (RF)","text":"<ul> <li>[RF001] O sistema deve permitir o cadastro de novos usu\u00e1rios.  </li> <li>[RF002] O sistema deve permitir que o usu\u00e1rio pesquise livros por t\u00edtulo, autor ou assunto.  </li> <li>[RF003] O sistema deve registrar o empr\u00e9stimo de um livro para um usu\u00e1rio.  </li> <li>[RF004] O sistema deve notificar o usu\u00e1rio por e-mail quando o prazo de devolu\u00e7\u00e3o estiver pr\u00f3ximo.  </li> </ul>"},{"location":"SPRINT_00/Sprint00_requisitos/#requisitos-nao-funcionais-rnf","title":"Requisitos N\u00e3o Funcionais (RNF)","text":"<ul> <li>[RNF001] O sistema deve processar pesquisas em at\u00e9 3 segundos.  </li> <li>[RNF002] O sistema deve estar dispon\u00edvel 24 horas por dia, 7 dias por semana.  </li> <li>[RNF003] O sistema deve armazenar os dados em conformidade com a Lei Geral de Prote\u00e7\u00e3o de Dados (LGPD).  </li> </ul>"}]}